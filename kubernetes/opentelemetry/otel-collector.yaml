---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
data:
  config.yaml: |-
    receivers:
      otlp:
        protocols:
          grpc:
      # Dummy receiver that's never used, because a pipeline is required to have one.
      otlp/spanmetrics:
        protocols:
          grpc:
            endpoint: "localhost:12345"
      prometheus:
        config:
          scrape_configs:
            - job_name: 'span_job'
              scrape_interval: 10s
              static_configs:
                - targets: [ "0.0.0.0:8889" ]      
    exporters:
      otlp:
        endpoint: tempo-eu-west-0.grafana.net:443
        headers:
          authorization: Basic $T_AUTH_BASE64
          content-type: application/json
      prometheus:
        endpoint: "0.0.0.0:8889"
      prometheusremotewrite:
        endpoint: "https://prometheus-prod-01-eu-west-0.grafana.net/api/prom/push"
        headers:
          authorization: Basic $M_AUTH_BASE64

    processors:
      batch:

      spanmetrics:
        metrics_exporter: prometheus
        latency_histogram_buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
          - name: http.method
            default: GET
          - name: http.status_code
        dimensions_cache_size: 1000
    
    extensions:
      health_check:
      pprof:
      zpages:

    service:
      extensions: [pprof, zpages, health_check]
      pipelines:
        traces:
          receivers: [otlp]
          exporters: [otlp]
          processors: [spanmetrics,batch]

        metrics/spanmetrics:
          receivers: [otlp/spanmetrics]
          exporters: [prometheus]

        metrics:
          receivers: [prometheus]
          exporters: [prometheusremotewrite]
          
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:latest
        resources:
          limits:
            cpu: 100m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - mountPath: /var/log
          name: varlog
          readOnly: true
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /etc/otel/config.yaml
          name: data
          subPath: config.yaml
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: data
        configMap:
          name: otel-collector-config

---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
  - name: metrics # Default endpoint for querying metrics.
    port: 8888
  - name: otlp # Default endpoint for querying metrics.
    port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    component: otel-collector
